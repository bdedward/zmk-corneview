/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors/mouse_keys.dtsi>

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1900

&spi1 {
    cs-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>; // P0.06
};

&nice_view {
    compatible = "nice_view";
    spi-max-frequency = <10000000>;
    reg = <0>;
    spi-cs-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
};


/ {
        behaviors {
                td0: BSPC_DEL{
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <175>;
                bindings = <&kp BSPC>, <&kp DEL>;
                };

                td1: TAB_ESC{
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp TAB>, <&kp ESC>;
                };

                td2: CAPS_SHIFT {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp LSHFT>, <&kp CAPS>;
                };

                td3: QUOTE_SHIFT {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp RSHFT>, <&kp SQT>;
                };

                td_1_f1: tap_dance_1_f1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>; // Adjust tapping term as needed
            bindings = <&kp N1>, <&kp F1>;
                };

                // Tap dance for 2 or F2
                td_2_f2: tap_dance_2_f2 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N2>, <&kp F2>;
                };

                // Tap dance for 3 or F3
                td_3_f3: tap_dance_3_f3 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N3>, <&kp F3>;
                };

                // Tap dance for 4 or F4
                td_4_f4: tap_dance_4_f4 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N4>, <&kp F4>;
                };

                // Tap dance for 5 or F5
                td_5_f5: tap_dance_5_f5 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N5>, <&kp F5>;
                };

                // Tap dance for 6 or F6
                td_6_f6: tap_dance_6_f6 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N6>, <&kp F6>;
                };

                // Tap dance for 7 or F7
                td_7_f7: tap_dance_7_f7 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N7>, <&kp F7>;
                };

                // Tap dance for 8 or F8
                td_8_f8: tap_dance_8_f8 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N8>, <&kp F8>;
                };

                // Tap dance for 9 or F9
                td_9_f9: tap_dance_9_f9 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N9>, <&kp F9>;
                };

                // Tap dance for 0 or F10
                td_0_f10: tap_dance_0_f10 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N0>, <&kp F10>;
                };


               
        };

        //combos {
          //      compatible = "zmk,combos";
            //    combo_esc {
        //                timeout-ms = <50>;
        //             key-positions = <1 2>;
        //                bindings = <&kp ESC>;
        //        };
        //};



        keymap {
                compatible = "zmk,keymap";
                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB/ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CAPS/SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '/SHIFT   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | DEL  |
//                    | ALT | SPC | LWR |   | RSE | ENT  |   WIN |
                        bindings = <
   &td1   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &td2  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &td3 
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp DEL
                  &lt 3 LALT &kp SPACE &mo 1  &mo 2 &kp RET  &kp RGUI
                        >;
                };
                1 {
// -----------------------------------------------------------------------------------------
// |  |  |    |    |   |     |         |  | / |   7  |  8  |  9  | -  |           |   |
// |  |  |    |    |   |               |  | * |   4  |  5  |  6  | +  |   |      |    |
// |  | BTCLR| BT1 | BT2 | BT3 | BT4|  |  |   |   1  |  2  |  3  |   |      |    |  |
//                    | LALT | SPC |    |  |         |  0  | ENT |
                        bindings = <
   &trans &trans &kp HOME &kp UP &kp END &trans                             &kp FSLH &kp N7 &kp N8 &kp N9 &kp MINUS &kp BSPC
   &trans &trans &kp LEFT &kp DOWN &kp RIGHT &kp INS                        &kp ASTRK &kp N4 &kp N5 &kp N6 &kp PLUS &trans 
   &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &kp N1 &kp N2 &kp N3 &trans &trans
                                    &kp LALT &kp SPACE  &trans           &trans  &kp N0 &trans  
                        >;
                };
                2 {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |  _  |  +  |  {  |  }  | "|" |  ~   |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | SHIFT| SPC|     |    |  ENT | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp UNDER &kp TILDE  &kp LBRC  &kp RBRC &kp PIPE &kp PLUS       &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans &trans   &trans   &trans       &trans &trans &trans &trans &trans &trans
                             &kp LSHFT &kp SPACE &trans         &trans  &kp RET  &kp RALT
                        >;
                };
                3 {
// -----------------------------------------------------------------------------------------
// |  |  | HOME |  UP | END  |   |   |   KC_MS_WH_UP  |  KC_MS_UP   |    |       |             |   |
// |  |  | LEFT |  DOWN | RIGHT  | INS  |   |    KC_MS_LEFT |   KC_MS_DOWN  |  KC_MS_RIGHT  |    |   |  |   |
// |  |  |  |   |   |   |   |   KC_MS_WH_DOWN   |    | INS |      |    |  |
//                    |   |  |    |  |   |  |    |
                        bindings = <
   &kp LALT &td_1_f1 &td_2_f2 &td_3_f3 &td_4_f4 &td_5_f5 &trans &trans &trans &trans &trans &trans
   &td_6_f6 &td_7_f7 &td_8_f8 &td_9_f9 &td_0_f10 &kp INS &trans &trans &trans &trans &trans &trans 
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                                    &trans &trans  &trans           &trans  &trans &trans
                        >;
                };
                
                
        };
};